/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import com.itextpdf.text.DocumentException;
import control.Control;
import java.awt.Color;
import java.awt.Component;
import java.io.FileNotFoundException;
import java.time.LocalDate;
import java.util.Comparator;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import modelo.Falta;
import modelo.Horario;

/**
 *
 * @author Charly Cimino
 */
public class Informe extends VistaBase {

    /**
     * Creates new form Informe
     */
    public Informe() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CUI = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Apellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaFaltas = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        Apellido1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Apellido2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Apellido3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        CUI.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CUIItemStateChanged(evt);
            }
        });

        jLabel1.setText("Codigo");

        jLabel2.setText("Nombre");

        Nombre.setEditable(false);

        jLabel3.setText("Hora Entrada");

        Apellido.setEditable(false);

        jLabel4.setText("Holgura");

        jTextField1.setEditable(false);

        jButton1.setText("Imprimir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tablaFaltas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Dia", "Entrada", "Alm. Salida", "Alm. Entrada", "Salida"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaFaltas);

        jLabel5.setText("Hora Salida");

        Apellido1.setEditable(false);

        jLabel6.setText("Hora Salida Almuerzo");

        Apellido2.setEditable(false);

        jLabel7.setText("Hora Entrada del Almuerzo");

        Apellido3.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(CUI, 0, 131, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(Nombre))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Apellido)
                            .addComponent(Apellido1, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                            .addComponent(Apellido2, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                            .addComponent(Apellido3, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextField1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Apellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Apellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Apellido3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(4, 4, 4)
                        .addComponent(CUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        controlador.mostrarVentana(TipoVentana.Ventana.INICIO);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        controlador.llenarLista(CUI);
    }//GEN-LAST:event_formWindowActivated

    private void CUIItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CUIItemStateChanged
    String seleccionado = (String) CUI.getSelectedItem();

    if (seleccionado != null && !seleccionado.isEmpty()) {
        try {
            long codigo = Long.parseLong(seleccionado);

            // 1️⃣ Cargar datos personales
            String[] datos = this.controlador.traerDatos(codigo);

            Nombre.setText(datos[0]);
            Apellido.setText(datos[1]);
            Apellido1.setText(datos[2]);

            // Verificar individualmente cada uno
            Apellido2.setText((datos[3] != null && !datos[3].isEmpty()) ? datos[3] : " --- ");
            Apellido3.setText((datos[4] != null && !datos[4].isEmpty()) ? datos[4] : " --- ");


            

            // 2️⃣ Obtener registros diarios
            List<Object[]> registros = this.controlador.obtenerFaltasPorEmpleado(codigo);
            DefaultTableModel modeloTabla = (DefaultTableModel) tablaFaltas.getModel();
            modeloTabla.setRowCount(0);

            // 3️⃣ Ordenar los registros por fecha (asumiendo formato YYYY-MM-DD)
            registros.sort(Comparator.comparing(r -> LocalDate.parse((String) r[0])));

            // 4️⃣ Obtener las faltas y horario del empleado
            List<Falta> faltasEmpleado = this.controlador.obtenerFaltasPorCodigo(codigo);
            Horario horarioEmpleado = this.controlador.getModelo().getHorarios().stream()
                    .filter(h -> Objects.equals(h.getCodigo(), codigo))
                    .findFirst()
                    .orElse(null);

            boolean tieneAlmuerzo = (horarioEmpleado != null
                    && horarioEmpleado.getHoraAlmuerzo() != null
                    && horarioEmpleado.getFinAlmuerzo() != null);

            // 5️⃣ Rellenar la tabla
            for (Object[] r : registros) {
                String dia = (String) r[0];
                String entrada = (String) r[1];
                String entradaAlm = (String) r[2];
                String salidaAlm = (String) r[3];
                String salida = (String) r[4];

                // Normalizar horas
                entrada = (entrada == null || entrada.isEmpty()) ? "No registrada" : entrada;
                salida = (salida == null || salida.isEmpty()) ? "No registrada" : salida;

                if (!tieneAlmuerzo) {
                    entradaAlm = "—";
                    salidaAlm = "—";
                } else {
                    entradaAlm = (entradaAlm == null || entradaAlm.isEmpty()) ? "No registrada" : entradaAlm;
                    salidaAlm = (salidaAlm == null || salidaAlm.isEmpty()) ? "No registrada" : salidaAlm;
                }

                modeloTabla.addRow(new Object[]{dia, entrada, entradaAlm, salidaAlm, salida});
            }

            // 6️⃣ Colorear filas según motivo de falta
            tablaFaltas.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value,
                                                               boolean isSelected, boolean hasFocus,
                                                               int row, int column) {
                    Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                    String dia = (String) table.getValueAt(row, 0);
                    Color colorBase = Color.WHITE;

                    Falta faltaDia = faltasEmpleado.stream()
                            .filter(f -> f.getDiaFalta().equals(dia))
                            .findFirst()
                            .orElse(null);

                    if (faltaDia != null) {
                        Falta.MotivoFalta motivo = faltaDia.getMotivo();

                        switch (motivo) {
                            case FALTA_COMPLETA:
                                colorBase = Color.RED; // Falta total
                                break;
                            case ENTRADA_TARDE:
                            case SALIDA_TEMPRANA:
                            case ENTRADA_TARDE_DEL_ALMUERZO:
                            case SALIDA_TEMPRANA_AL_ALMUERZO:
                                colorBase = Color.YELLOW; // Llegó tarde o se fue antes
                                break;
                            case NO_MARCA_ENTRADA:
                            case NO_MARCA_SALIDA:
                            case NO_MARCA_SALIDA_ALMUERZO:
                            case NO_MARCA_ENTRADA_ALMUERZO:
                                colorBase = Color.ORANGE; // No marcó
                                break;
                            default:
                                colorBase = Color.GREEN; // Cualquier otro caso
                        }
                    } else {
                        colorBase = Color.GREEN; // Sin falta → presente
                    }

                    c.setBackground(colorBase);
                    if (isSelected) {
                        c.setBackground(colorBase.darker());
                    }
                    return c;
                }
            });


        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this,
                    "Error al convertir el CUI a número: " + ex.getMessage(),
                    "Error de formato", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "Error al obtener las faltas: " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }


    }//GEN-LAST:event_CUIItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String fecha = Control.FechaCarta();
        String nombre = Nombre.getText();
        String ruta = controlador.getModelo().getHistorial().getUbicacionCartas();
        Long codigo = null;
        try {
            Object item = CUI.getSelectedItem();
            if (item != null) {
                codigo = Long.valueOf(item.toString());
            } else {
                JOptionPane.showMessageDialog(this, "No se seleccionó ningún código", "Error", JOptionPane.WARNING_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El código debe ser un número válido", "Error de formato", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            controlador.getControlPDF().crearInforme(ruta, fecha, nombre, codigo);
        } catch (FileNotFoundException | DocumentException ex) {
            Logger.getLogger(Informe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Informe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Informe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Informe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Informe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Informe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Apellido;
    private javax.swing.JTextField Apellido1;
    private javax.swing.JTextField Apellido2;
    private javax.swing.JTextField Apellido3;
    private javax.swing.JComboBox<String> CUI;
    private javax.swing.JTextField Nombre;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tablaFaltas;
    // End of variables declaration//GEN-END:variables
}
